{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/cbrn/Desktop/Proyectos/React/website/src/components/CryptoAPI.js\";\nimport React, { Component } from 'react';\n\nclass CryptoAPI extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://coingecko.p.rapidapi.com/coins/bitcoin\", {\n      method: 'GET',\n      headers: {\n        'x-rapidapi-host': 'coingecko.p.rapidapi.com',\n        'x-rapidapi-key': 'f499b0c80emsh4da670db83bbe25p1c6b2bjsncb9ae6435440'\n      }\n    }).then(res => res.json()).then(result => {\n      this.setState({\n        isLoaded: true,\n        items: result.items\n      });\n    }, error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      items\n    } = this.state;\n\n    if (error) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 14\n        }\n      }, \"Error: \", error.message);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 14\n        }\n      }, \"Loading...\");\n    } else {\n      return /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }\n      }, items.map(item => /*#__PURE__*/React.createElement(\"li\", {\n        key: item.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }\n      }, item.name, \" \", item.price)));\n    }\n  }\n\n}\n\nexport default CryptoAPI;","map":{"version":3,"sources":["/mnt/c/Users/cbrn/Desktop/Proyectos/React/website/src/components/CryptoAPI.js"],"names":["React","Component","CryptoAPI","constructor","props","state","error","isLoaded","items","componentDidMount","fetch","method","headers","then","res","json","result","setState","render","message","map","item","name","price"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAGA,MAAMC,SAAN,SAAwBD,SAAxB,CAAkC;AAEhCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,IADI;AAEXC,MAAAA,QAAQ,EAAE,KAFC;AAGXC,MAAAA,KAAK,EAAE;AAHI,KAAb;AAKD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,gDAAD,EAAmD;AACtDC,MAAAA,MAAM,EAAE,KAD8C;AAEtDC,MAAAA,OAAO,EAAE;AACP,2BAAmB,0BADZ;AAEP,0BAAkB;AAFX;AAF6C,KAAnD,CAAL,CAOGC,IAPH,CAOQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAPf,EAQGF,IARH,CASKG,MAAD,IAAY;AACV,WAAKC,QAAL,CAAc;AACZV,QAAAA,QAAQ,EAAE,IADE;AAEZC,QAAAA,KAAK,EAAEQ,MAAM,CAACR;AAFF,OAAd;AAID,KAdL,EAgBKF,KAAD,IAAW;AACT,WAAKW,QAAL,CAAc;AACZV,QAAAA,QAAQ,EAAE,IADE;AAEZD,QAAAA;AAFY,OAAd;AAID,KArBL;AAuBD;;AAEDY,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEZ,MAAAA,KAAF;AAASC,MAAAA,QAAT;AAAmBC,MAAAA;AAAnB,QAA6B,KAAKH,KAAxC;;AACA,QAAIC,KAAJ,EAAW;AACT,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAaA,KAAK,CAACa,OAAnB,CAAP;AACD,KAFD,MAEO,IAAI,CAACZ,QAAL,EAAe;AACpB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD,KAFM,MAEA;AACL,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGC,KAAK,CAACY,GAAN,CAAUC,IAAI,iBACb;AAAI,QAAA,GAAG,EAAEA,IAAI,CAACC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGD,IAAI,CAACC,IADR,OACeD,IAAI,CAACE,KADpB,CADD,CADH,CADF;AASD;AACF;;AAtD+B;;AA2DlC,eAAerB,SAAf","sourcesContent":["import React, { Component } from 'react';\r\n\r\n\r\nclass CryptoAPI extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: null,\r\n      isLoaded: false,\r\n      items: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://coingecko.p.rapidapi.com/coins/bitcoin\", {\r\n      method: 'GET',\r\n      headers: {\r\n        'x-rapidapi-host': 'coingecko.p.rapidapi.com',\r\n        'x-rapidapi-key': 'f499b0c80emsh4da670db83bbe25p1c6b2bjsncb9ae6435440'\r\n      }\r\n    })\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            items: result.items\r\n          });\r\n        },\r\n\r\n        (error) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            error\r\n          });\r\n        }\r\n      )\r\n  }\r\n\r\n  render() {\r\n    const { error, isLoaded, items } = this.state;\r\n    if (error) {\r\n      return <div>Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n      return <div>Loading...</div>;\r\n    } else {\r\n      return (\r\n        <ul>\r\n          {items.map(item => (\r\n            <li key={item.name}>\r\n              {item.name} {item.price}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      );\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default CryptoAPI;\r\n"]},"metadata":{},"sourceType":"module"}