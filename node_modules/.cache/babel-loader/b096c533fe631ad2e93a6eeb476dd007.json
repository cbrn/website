{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/cbrn/Desktop/Proyectos/React/website/src/components/CryptoAPI.js\";\nimport React, { Component } from 'react';\n\nclass CryptoAPI extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      name: '',\n      price: '',\n      item: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://coingecko.p.rapidapi.com/coins/\" + this.props.name, {\n      method: 'GET',\n      headers: {\n        'x-rapidapi-host': 'coingecko.p.rapidapi.com',\n        'x-rapidapi-key': 'f499b0c80emsh4da670db83bbe25p1c6b2bjsncb9ae6435440'\n      }\n    }).then(res => res.json()).then(result => {\n      this.setState({\n        isLoaded: true,\n        name: result.symbol,\n        price: result.market_data.current_price.usd,\n        item: result\n      });\n      console.log(result);\n    }, error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      price,\n      name\n    } = this.state;\n\n    if (error) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 14\n        }\n      }, \"Error: \", error.message);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 14\n        }\n      }, \"Loading...\");\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }\n      }, name, \" \", price);\n    }\n  }\n\n}\n\nexport default CryptoAPI;","map":{"version":3,"sources":["/mnt/c/Users/cbrn/Desktop/Proyectos/React/website/src/components/CryptoAPI.js"],"names":["React","Component","CryptoAPI","constructor","props","state","error","isLoaded","name","price","item","componentDidMount","fetch","method","headers","then","res","json","result","setState","symbol","market_data","current_price","usd","console","log","render","message"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAGA,MAAMC,SAAN,SAAwBD,SAAxB,CAAkC;AAEhCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,IADI;AAEXC,MAAAA,QAAQ,EAAE,KAFC;AAGXC,MAAAA,IAAI,EAAE,EAHK;AAIXC,MAAAA,KAAK,EAAE,EAJI;AAKXC,MAAAA,IAAI,EAAE;AALK,KAAb;AAOD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,4CAA0C,KAAKR,KAAL,CAAWI,IAAtD,EAA4D;AAC/DK,MAAAA,MAAM,EAAE,KADuD;AAE/DC,MAAAA,OAAO,EAAE;AACP,2BAAmB,0BADZ;AAEP,0BAAkB;AAFX;AAFsD,KAA5D,CAAL,CAOGC,IAPH,CAOQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAPf,EAQGF,IARH,CASKG,MAAD,IAAY;AACV,WAAKC,QAAL,CAAc;AACZZ,QAAAA,QAAQ,EAAE,IADE;AAEZC,QAAAA,IAAI,EAAEU,MAAM,CAACE,MAFD;AAGZX,QAAAA,KAAK,EAAES,MAAM,CAACG,WAAP,CAAmBC,aAAnB,CAAiCC,GAH5B;AAIZb,QAAAA,IAAI,EAAEQ;AAJM,OAAd;AAMAM,MAAAA,OAAO,CAACC,GAAR,CAAYP,MAAZ;AACD,KAjBL,EAmBKZ,KAAD,IAAW;AACT,WAAKa,QAAL,CAAc;AACZZ,QAAAA,QAAQ,EAAE,IADE;AAEZD,QAAAA;AAFY,OAAd;AAID,KAxBL;AA0BD;;AAEDoB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEpB,MAAAA,KAAF;AAASC,MAAAA,QAAT;AAAmBE,MAAAA,KAAnB;AAA0BD,MAAAA;AAA1B,QAAmC,KAAKH,KAA9C;;AACA,QAAIC,KAAJ,EAAW;AACT,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAaA,KAAK,CAACqB,OAAnB,CAAP;AACD,KAFD,MAEO,IAAI,CAACpB,QAAL,EAAe;AACpB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD,KAFM,MAEA;AACL,0BACE;AAAK,QAAA,GAAG,EAAEC,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiBA,IAAjB,OAAwBC,KAAxB,CADF;AAGD;AACF;;AArD+B;;AA0DlC,eAAeP,SAAf","sourcesContent":["import React, { Component } from 'react';\r\n\r\n\r\nclass CryptoAPI extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: null,\r\n      isLoaded: false,\r\n      name: '',\r\n      price: '',\r\n      item: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://coingecko.p.rapidapi.com/coins/\"+this.props.name, {\r\n      method: 'GET',\r\n      headers: {\r\n        'x-rapidapi-host': 'coingecko.p.rapidapi.com',\r\n        'x-rapidapi-key': 'f499b0c80emsh4da670db83bbe25p1c6b2bjsncb9ae6435440'\r\n      }\r\n    })\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            name: result.symbol,\r\n            price: result.market_data.current_price.usd,\r\n            item: result\r\n          });\r\n          console.log(result);\r\n        },\r\n\r\n        (error) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            error\r\n          });\r\n        }\r\n      )\r\n  }\r\n\r\n  render() {\r\n    const { error, isLoaded, price, name } = this.state;\r\n    if (error) {\r\n      return <div>Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n      return <div>Loading...</div>;\r\n    } else {\r\n      return (\r\n        <div key={name}>{name} {price}</div>\r\n      );\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default CryptoAPI;\r\n"]},"metadata":{},"sourceType":"module"}