{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/cbrn/Desktop/Proyectos/React/website/src/components/CryptoAPI.js\";\nimport React, { Component } from 'react';\nimport { FaBitcoin, FaEthereum } from \"react-icons/fa\";\n\nclass CryptoAPI extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getCryptoIcon = icon => {\n      if (icon === \"Bitcoin\") {\n        return /*#__PURE__*/React.createElement(FaBitcoin, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 14\n          }\n        });\n      } else if (icon === \"ethereum\") {\n        return /*#__PURE__*/React.createElement(FaEthereum, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 14\n          }\n        });\n      }\n    };\n\n    this.state = {\n      error: null,\n      isLoaded: false,\n      item: []\n    };\n  }\n\n  componentDidMount() {\n    const apiHost = \"coingecko.p.rapidapi.com\";\n    const apiKey = \"f499b0c80emsh4da670db83bbe25p1c6b2bjsncb9ae6435440\";\n    fetch(\"https://coingecko.p.rapidapi.com/coins/\" + this.props.name, {\n      method: 'GET',\n      headers: {\n        'x-rapidapi-host': apiHost,\n        'x-rapidapi-key': apiKey\n      }\n    }).then(res => res.json()).then(result => {\n      this.setState({\n        isLoaded: true,\n        item: result\n      });\n      console.log(result);\n    }, error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      item\n    } = this.state;\n\n    if (error) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 14\n        }\n      }, \"Error: \", error.message);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 14\n        }\n      }, \"Loading...\");\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: item.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }\n      }, this.getCryptoIcon(item.name), \" \", item.market_data.current_price.usd);\n    }\n  }\n\n}\n\nexport default CryptoAPI;","map":{"version":3,"sources":["/mnt/c/Users/cbrn/Desktop/Proyectos/React/website/src/components/CryptoAPI.js"],"names":["React","Component","FaBitcoin","FaEthereum","CryptoAPI","constructor","props","getCryptoIcon","icon","state","error","isLoaded","item","componentDidMount","apiHost","apiKey","fetch","name","method","headers","then","res","json","result","setState","console","log","render","message","market_data","current_price","usd"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,gBAAtC;;AAEA,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;AAGhCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SASnBC,aATmB,GASFC,IAAD,IAAU;AACxB,UAAGA,IAAI,KAAK,SAAZ,EAAsB;AACpB,4BAAO,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,OAFD,MAEO,IAAGA,IAAI,KAAK,UAAZ,EAAuB;AAC5B,4BAAO,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;AACF,KAfkB;;AAEjB,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,IADI;AAEXC,MAAAA,QAAQ,EAAE,KAFC;AAGXC,MAAAA,IAAI,EAAE;AAHK,KAAb;AAKD;;AAUDC,EAAAA,iBAAiB,GAAG;AAElB,UAAMC,OAAO,GAAG,0BAAhB;AACA,UAAMC,MAAM,GAAG,oDAAf;AAEAC,IAAAA,KAAK,CAAC,4CAA0C,KAAKV,KAAL,CAAWW,IAAtD,EAA4D;AAC/DC,MAAAA,MAAM,EAAE,KADuD;AAE/DC,MAAAA,OAAO,EAAE;AACP,2BAAmBL,OADZ;AAEP,0BAAkBC;AAFX;AAFsD,KAA5D,CAAL,CAOGK,IAPH,CAOQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAPf,EAQGF,IARH,CASKG,MAAD,IAAY;AACV,WAAKC,QAAL,CAAc;AACZb,QAAAA,QAAQ,EAAE,IADE;AAEZC,QAAAA,IAAI,EAAEW;AAFM,OAAd;AAIAE,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACD,KAfL,EAiBKb,KAAD,IAAW;AACT,WAAKc,QAAL,CAAc;AACZb,QAAAA,QAAQ,EAAE,IADE;AAEZD,QAAAA;AAFY,OAAd;AAID,KAtBL;AAwBD;;AAEDiB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEjB,MAAAA,KAAF;AAASC,MAAAA,QAAT;AAAmBC,MAAAA;AAAnB,QAA4B,KAAKH,KAAvC;;AACA,QAAIC,KAAJ,EAAW;AACT,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAaA,KAAK,CAACkB,OAAnB,CAAP;AACD,KAFD,MAEO,IAAI,CAACjB,QAAL,EAAe;AACpB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD,KAFM,MAEA;AACL,0BACE;AAAK,QAAA,GAAG,EAAEC,IAAI,CAACK,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsB,KAAKV,aAAL,CAAmBK,IAAI,CAACK,IAAxB,CAAtB,OAAsDL,IAAI,CAACiB,WAAL,CAAiBC,aAAjB,CAA+BC,GAArF,CADF;AAGD;AACF;;AA9D+B;;AAmElC,eAAe3B,SAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { FaBitcoin, FaEthereum } from \"react-icons/fa\";\r\n\r\nclass CryptoAPI extends Component {\r\n\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: null,\r\n      isLoaded: false,\r\n      item: []\r\n    };\r\n  }\r\n\r\n  getCryptoIcon = (icon) => {\r\n    if(icon === \"Bitcoin\"){\r\n      return <FaBitcoin />\r\n    } else if(icon === \"ethereum\"){\r\n      return <FaEthereum />\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    const apiHost = \"coingecko.p.rapidapi.com\";\r\n    const apiKey = \"f499b0c80emsh4da670db83bbe25p1c6b2bjsncb9ae6435440\"\r\n\r\n    fetch(\"https://coingecko.p.rapidapi.com/coins/\"+this.props.name, {\r\n      method: 'GET',\r\n      headers: {\r\n        'x-rapidapi-host': apiHost,\r\n        'x-rapidapi-key': apiKey\r\n      }\r\n    })\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            item: result\r\n          });\r\n          console.log(result);\r\n        },\r\n\r\n        (error) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            error\r\n          });\r\n        }\r\n      )\r\n  }\r\n\r\n  render() {\r\n    const { error, isLoaded, item } = this.state;\r\n    if (error) {\r\n      return <div>Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n      return <div>Loading...</div>;\r\n    } else {\r\n      return (\r\n        <div key={item.name}>{this.getCryptoIcon(item.name)} {item.market_data.current_price.usd}</div>\r\n      );\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default CryptoAPI;\r\n"]},"metadata":{},"sourceType":"module"}