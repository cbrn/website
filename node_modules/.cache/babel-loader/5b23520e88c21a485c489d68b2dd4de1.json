{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/cbrn/Desktop/Proyectos/React/website/src/components/emojipedia/Emojis.js\";\nimport React, { Component } from 'react';\nimport Emoji from './Emoji';\nimport { Alert, Col, Spinner, Badge } from 'react-bootstrap';\n\nclass Emojis extends Component {\n  render() {\n    if (this.props.data && this.props.loaded) {\n      return this.props.data.map(e => {\n        const emoji = String.fromCodePoint(parseInt(e.codePoint, 16));\n        return /*#__PURE__*/React.createElement(Emoji, {\n          key: e.slug,\n          emoji: emoji,\n          slug: e.slug,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 20\n          }\n        });\n      });\n    } else if (!this.props.loaded) {\n      return /*#__PURE__*/React.createElement(Col, {\n        align: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 14\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Badge, {\n        variant: \"dark\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }\n      }, \"Loading\", /*#__PURE__*/React.createElement(Spinner, {\n        animation: \"grow\",\n        variant: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(Spinner, {\n        animation: \"grow\",\n        variant: \"secondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(Spinner, {\n        animation: \"grow\",\n        variant: \"success\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 7\n        }\n      }))));\n    } else {\n      return /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 14\n        }\n      }, /*#__PURE__*/React.createElement(Alert, {\n        variant: \"danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 9\n        }\n      }, \"Ups, no Emoji was found :(\"));\n    }\n  }\n\n}\n\nexport default Emojis;","map":{"version":3,"sources":["/mnt/c/Users/cbrn/Desktop/Proyectos/React/website/src/components/emojipedia/Emojis.js"],"names":["React","Component","Emoji","Alert","Col","Spinner","Badge","Emojis","render","props","data","loaded","map","e","emoji","String","fromCodePoint","parseInt","codePoint","slug"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,KAAT,EAAgBC,GAAhB,EAAqBC,OAArB,EAA8BC,KAA9B,QAA2C,iBAA3C;;AAEA,MAAMC,MAAN,SAAqBN,SAArB,CAA+B;AAE7BO,EAAAA,MAAM,GAAE;AACN,QAAG,KAAKC,KAAL,CAAWC,IAAX,IAAmB,KAAKD,KAAL,CAAWE,MAAjC,EAAwC;AACpC,aACE,KAAKF,KAAL,CAAWC,IAAX,CAAgBE,GAAhB,CAAoBC,CAAC,IAAI;AACvB,cAAMC,KAAK,GAAGC,MAAM,CAACC,aAAP,CAAqBC,QAAQ,CAACJ,CAAC,CAACK,SAAH,EAAc,EAAd,CAA7B,CAAd;AACA,4BAAO,oBAAC,KAAD;AAAO,UAAA,GAAG,EAAEL,CAAC,CAACM,IAAd;AAAoB,UAAA,KAAK,EAAEL,KAA3B;AAAkC,UAAA,IAAI,EAAED,CAAC,CAACM,IAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,OAHD,CADF;AAMH,KAPD,MAOM,IAAG,CAAC,KAAKV,KAAL,CAAWE,MAAf,EAAsB;AAC1B,0BAAO,oBAAC,GAAD;AAAK,QAAA,KAAK,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAI,oBAAC,KAAD;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAEJ,oBAAC,OAAD;AAAS,QAAA,SAAS,EAAC,MAAnB;AAA0B,QAAA,OAAO,EAAC,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFI,eAGJ,oBAAC,OAAD;AAAS,QAAA,SAAS,EAAC,MAAnB;AAA0B,QAAA,OAAO,EAAC,WAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHI,eAIJ,oBAAC,OAAD;AAAS,QAAA,SAAS,EAAC,MAAnB;AAA0B,QAAA,OAAO,EAAC,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJI,CAAJ,CADO,CAAP;AAQD,KATK,MASD;AACH,0BAAO,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACL,oBAAC,KAAD;AAAO,QAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCADK,CAAP;AAGD;AACF;;AAxB4B;;AA4B/B,eAAeJ,MAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport Emoji from './Emoji';\r\nimport { Alert, Col, Spinner, Badge } from 'react-bootstrap';\r\n\r\nclass Emojis extends Component {\r\n\r\n  render(){\r\n    if(this.props.data && this.props.loaded){\r\n        return (\r\n          this.props.data.map(e => {\r\n            const emoji = String.fromCodePoint(parseInt(e.codePoint, 16));\r\n            return <Emoji key={e.slug} emoji={emoji} slug={e.slug} />\r\n          })\r\n        )\r\n    }else if(!this.props.loaded){\r\n      return <Col align=\"center\">\r\n      <h1><Badge variant=\"dark\">\r\n                        Loading\r\n      <Spinner animation=\"grow\" variant=\"primary\" />\r\n      <Spinner animation=\"grow\" variant=\"secondary\" />\r\n      <Spinner animation=\"grow\" variant=\"success\" />\r\n      </Badge></h1>\r\n      </Col>\r\n    }else{\r\n      return <Col>\r\n        <Alert variant=\"danger\" >Ups, no Emoji was found :(</Alert>\r\n      </Col>\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport default Emojis;\r\n"]},"metadata":{},"sourceType":"module"}